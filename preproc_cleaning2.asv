function preproc_cleaning2(myPaths,id)
%
% Script for basic postprocessing of the preprocessed EEG data
% ALS Centre, University Medical Centre Utrecht
%
% =========================================================================
% SDukic edits
% v1, March 2025
% =========================================================================

% Load preprocessing settings
cfg = preproc_parameters;

% Define paths and files
subject          = [];
subject.id       = id;
subject.task     = myPaths.task;
subject.group    = myPaths.group;
subject.visit    = myPaths.visit;
subject.preproc  = fullfile(myPaths.preproc, subject.id);
subject.clnfile0 = [subject.id '_' myPaths.visit '_' myPaths.task '_cleandata_' myPaths.rnum 'a.mat'];
subject.clnfile{1} = [subject.id '_' myPaths.visit '_' myPaths.task '_cleandata_' myPaths.rnum 'b.mat'];
subject.clnfile{2} = [subject.id '_' myPaths.visit '_' myPaths.task '_cleandata_' myPaths.rnum 'c.mat'];

% Log time
t0 = datetime("now");
procTimeTags = {myPaths.proctime; strrep(strrep(char(t0),':','-'),' ','-')};

% Report
fprintf('\n==================================================================\n');
fprintf('%s | %s | %s dataset | processing part 2\n',myPaths.group,subject.id,myPaths.task);
fprintf('==================================================================\n');

% =========================================================================
% Basic post-preprocessing
% =========================================================================
% Load cleaned data
fileName = fullfile(subject.preproc,subject.clnfile0);
if exist(fileName, 'file') == 2
    fprintf('\n================================\n');
    fprintf('Loading data\n');
    fprintf('================================\n');
    load(fileName,'EEG'); fprintf('Done!\n');
else
    warning([subject.id ' is missing preprocessed ' myPaths.task ' data. Skipping...']); return;
end

% Filter lowpass, must be done on continuous data
EEG = do_filtering(EEG,'lowpass',cfg.flt);

% IAF, bnetter if done on continuous data?
EEG = check_restingIAF(EEG);

% Epoch
EEGcell = epoch_data(EEG,cfg.trg);
clearvars EEG

% Loop through all epoched datasets
for i = 1:length(EEGcell)
    % Common-average referening
    EEGcell{i} = do_reref(EEGcell{i},'aRegular');

    % Baseline correction
    EEGcell{i} = do_baselinecorrection(EEGcell{i},'traditional',myPaths);

    % EEGTMP = reduce_sparseartifacts(EEGcell{i});
    % vis_artifacts(EEGTMP,EEGcell{i});

    % Detect bad epochs
    [EEGcell{i}, NumberTrials] = detect_badepochs(EEGcell{i},cfg);

    % Final estimates
    EEGcell{i} = preproc2_finalestimates(EEGcell{i},cfg);

    % Final reports/plots
    preproc2_finalplots(EEGcell{i},subject,NumberTrials,myPaths.task,i);

    % Save
    EEG = EEGcell{i};
    EEG.icaact = [];
    fprintf('\n%s: Saving the preprocessed data (part 2)...\n',subject.id);
    save(fullfile(subject.preproc,subject.clnfile{i}),'EEG','cfg','procTimeTags');
end

% Report
t1 = datetime("now");
dd = round(minutes(diff([t0 t1])));
fprintf('Finished: %s\n',t1);
fprintf('Running time: %d min.\n\n',dd);

end